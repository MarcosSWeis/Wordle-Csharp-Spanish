@page "/"
@using System.Diagnostics
@using Wordle.Service;
@using Microsoft.JSInterop;
@using Wordle.Service.Interface
@inject IJSRuntime JS


    <div class="text-center">

        <div class="ctn-grid-word">
            @for (int i = 0 ; i < 6 ; i++)
        {
            <div class="rows-grid-word" aria-label="row-@i" id="row-grid-@i">
                @for (int j = 0 ; j < 5 ; j++)
                {
                    <div class="animation-card bg-dark" style="animation-delay : @j*100">
                        <div class="letter-card  @(i<game?.GetLettersGril().GetLength(0) && j<game?.GetLettersGril().GetLength(1)? "status-"+game?.GetLettersGril()[i,j]?.Status.ToString():"")" id="card-grid-@j">

                            @if (i < game?.GetLettersGril().GetLength(0))
                            {
                                if (j < game?.GetLettersGril().GetLength(1))
                                {
                                    @game?.GetLettersGril()[i,j]?.Character
                                }
                            }                  
                            
                         </div>
                     </div>
                }
             </div>
        }
        </div>
    
         <div class="keyboard">
             <dvi class="keyboard-row ">
                @for (int i = 0 ; i <=9 ; i++)
                {
                int j = i;
                <button class="status-@(game?.GetKeyBoard().GetLetters()[j].Status)" @onclick="()=> game.SetLetterInGril(game.GetKeyBoard().GetLetters()[j])">@game?.GetKeyBoard().GetLetters()[j].Character</button>
                }

            </dvi>
        <dvi class="keyboard-row keyboard-row-mid">
                @for (int i = 10 ; i <= 18 ; i++)
                {
                int j = i;
                <button class="status-@(game?.GetKeyBoard().GetLetters()[j].Status)" @onclick="()=> game.SetLetterInGril(game.GetKeyBoard().GetLetters()[j])">@game?.GetKeyBoard().GetLetters()[j].Character</button>
                }
            </dvi>
            <dvi class="keyboard-row ">
            @for (int i = 19 ; i < game?.GetKeyBoard().GetLetters().Count ; i++)
                {
                int j = i;
                <button class="status-@(game?.GetKeyBoard().GetLetters()[j].Status)" @onclick="()=> game.SetLetterInGril(game.GetKeyBoard().GetLetters()[j])">@game?.GetKeyBoard().GetLetters()[j].Character</button>

                }
            </dvi>
       
    </div>
    </div>

@code{

    protected Game? game;
    private Notification? notification;

    protected override void OnInitialized()
    {  
        notification = new(JS);
        game = new Game(notification);
    }
    
}
